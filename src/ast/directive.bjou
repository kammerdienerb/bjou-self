type directive extends astbase {
    name : string
    args : astref[...]


    proc init(this) {
        astbase.init(this)
        this.name = str()
        this.args = [...astref]
    }

    proc create() : directive {
        r := { directive: }
        r.init()
        return r
    }

    proc visit(this, node : ast ref, visitor : visitor_t, arg : void*) : visit_action {
        visitor.pre(node, arg)

        if visitor.vis(node, arg) == visit_action.BREAK
            return visit_action.BREAK

        foreach ref a in this.args {
            if visit(unsafe_ast_ref(a), visitor, arg) == visit_action.BREAK {
                return visit_action.BREAK
            }
        }

        visitor.post(node, arg)

        return visit_action.CONTINUE
    }
}
